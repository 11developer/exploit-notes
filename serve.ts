import Server from "https://deno.land/x/lume@v1.19.3/core/server.ts";
// import expires from "https:/deno.land/x/lume/middlewares/expires.ts";
import notFound from "https://deno.land/x/lume@v1.19.3/middlewares/not_found.ts";

import { sleep } from "https://deno.land/x/sleep@v1.2.1/mod.ts";

// function expires(): import("https://deno.land/x/lume@v1.19.3/core/server.ts").Middleware {
//   throw new Error("Function not implemented.");
// }

const server = new Server({
  port: 8000,
  root: `${Deno.cwd()}/_site`,
});

// Rate limiting (max 10 requests per 10 seconds)
const maxRequests = 10;
const interval = 10000;
const rateLimitter = {
  requestCount: 0,
  lastResetTime: Date.now(),
};

server.use(async (request, next, conn) => {
  const response = await next(request);

  const remoteAddr = conn.remoteAddr;

  const currentTime = Date.now();

  // Reset rateLimitter after elapsing interval
  if (currentTime - rateLimitter.lastResetTime > interval) {
    rateLimitter.requestCount = 0;
    rateLimitter.lastResetTime = currentTime;
  }

  // Rate limiting
  if (rateLimitter.requestCount < maxRequests) {
    rateLimitter.requestCount += 1;
    console.log(`Request from ${JSON.stringify(remoteAddr)}. requestCount: ${JSON.stringify(rateLimitter.requestCount)}.`);
  } else {
    console.log(`Rate limiting for ${JSON.stringify(remoteAddr)}. Sleep 30 seconds.`);
    await sleep(30);
  }

  await sleep(1);

  return response;
})

// Expires
// server.use(expires());

// Not found
server.use(notFound({
  root: `${Deno.cwd()}/_site`,
  page404: "/404",
}));

server.start();

console.log("Listening on http://localhost:8000");

