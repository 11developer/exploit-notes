import Server from "https://deno.land/x/lume@v1.19.3/core/server.ts";
// import expires from "https:/deno.land/x/lume/middlewares/expires.ts";
import notFound from "https://deno.land/x/lume@v1.19.3/middlewares/not_found.ts";

import { Ratelimit } from "https://cdn.skypack.dev/@upstash/ratelimit@latest"
import { Redis } from "https://esm.sh/@upstash/redis";

import { sleep } from "https://deno.land/x/sleep/mod.ts";

// function expires(): import("https://deno.land/x/lume@v1.19.3/core/server.ts").Middleware {
//   throw new Error("Function not implemented.");
// }

// Used for DoS attack
const cache = new Map();

const ratelimit = new Ratelimit({
  redis: Redis.fromEnv(),
  limiter: Ratelimit.slidingwindow(10, "10 s"),
  ephemeralCache: cache,
  analytics: true,
  prefix: "@upstash/ratelimit",
});

const server = new Server({
  port: 8000,
  root: `${Deno.cwd()}/_site`,
});

// Rate limiting
server.use(async (request, next) => {
  const response = await next(request);

  const identifier = "api";
  // const { success } = await ratelimit.limit(identifier);

  // `blockUntilReady` returns a promise that resolves as soon as the request is allowed to be processed, or after 30 seconds
  const { success } = await ratelimit.blockUntilReady(identifier, 30_000);

  if (!success) {
    console.log("Ratelimit: Failed. Wait for 60 seconds.");
    
    // Wait for 60 seconds
    await sleep(60);
  }
  
  return response;
})

// Expires
// server.use(expires());

// Not found
server.use(notFound({
  root: `${Deno.cwd()}/_site`,
  page404: "/404",
}));

server.start();

console.log("Listening on http://localhost:8000");

